import{a as g,S as y,i as u}from"./assets/vendor-DUzvakyU.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function a(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(e){if(e.ep)return;e.ep=!0;const r=a(e);fetch(e.href,r)}})();const h={key:"49359598-9a4c243d7cce225cafe13dd3f",image_type:"photo",orientation:"horizontal",safesearch:"true"};function L(t){return g.get("https://pixabay.com/api/",{params:{q:t,...h}})}const l=document.querySelector(".gallery");function v(t){const s=t.map(n=>{const{webformatURL:e,largeImageURL:r,tags:o,likes:m,views:d,comments:f,downloads:p}=n;return`<li class="gallery-item">
            <a href="${r}"><img class="item-image" src="${e}" alt="${o}"></a>
            <div class="image-info">
                <p class="item-likes"><span class="info-accent">Likes</span>${m}</p>
                <p class="item-views"><span class="info-accent">Views</span>${d}</p>
                <p class="item-comments"><span class="info-accent">Comments</span>${f}</p>
                <p class="item-downloads"><span class="info-accent">Downloads</span>${p}</p>
            </div>
        </li>`}).join("");l.innerHTML="",l.insertAdjacentHTML("beforeend",s),new y(".gallery a").refresh()}const b=document.querySelector(".gallery"),i=document.querySelector(".form"),c=document.querySelector("#loader"),w=document.querySelector(".container");c.classList.remove("loader");i.addEventListener("submit",t=>{t.preventDefault();const s=t.currentTarget.elements.searchText.value.trim();P(s)&&(c.classList.add("loader"),L(s).then(a=>a.data.hits).then(a=>{if(!q(a))throw new Error("Invalid data from API");return a}).then(a=>{w.classList.remove("center"),v(a)}).catch(a=>console.error("ERROR:",a)).finally(()=>{c.classList.remove("loader"),i.reset()}))});function P(t){return t===""?(u.error({title:"Error",message:"Please, input data to search."}),!1):!0}function q(t){return t.length===0?(b.innerHTML="",i.reset(),u.error({message:"Sorry, there are no images matching your search query. Please try again!"}),!1):!0}
//# sourceMappingURL=index.js.map
